// <auto-generated />
using System;
using FacturilaAPI.Config;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FacturilaAPI.Migrations
{
    [DbContext(typeof(FacturilaDbContext))]
    [Migration("20240310152509_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FacturilaAPI.Models.Entity.Firm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegCom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Firm");
                });

            modelBuilder.Entity("FacturilaAPI.Models.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ActiveFirmId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActiveFirmId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FacturilaAPI.Models.Entity.UserFirm", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FirmId")
                        .HasColumnType("int");

                    b.Property<bool>("IsClient")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "FirmId");

                    b.HasIndex("FirmId");

                    b.ToTable("UserFirm");
                });

            modelBuilder.Entity("FacturilaAPI.Models.Entity.User", b =>
                {
                    b.HasOne("FacturilaAPI.Models.Entity.Firm", "ActiveFirm")
                        .WithMany()
                        .HasForeignKey("ActiveFirmId");

                    b.Navigation("ActiveFirm");
                });

            modelBuilder.Entity("FacturilaAPI.Models.Entity.UserFirm", b =>
                {
                    b.HasOne("FacturilaAPI.Models.Entity.Firm", "Firm")
                        .WithMany("UserFirms")
                        .HasForeignKey("FirmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FacturilaAPI.Models.Entity.User", "User")
                        .WithMany("UserFirms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firm");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FacturilaAPI.Models.Entity.Firm", b =>
                {
                    b.Navigation("UserFirms");
                });

            modelBuilder.Entity("FacturilaAPI.Models.Entity.User", b =>
                {
                    b.Navigation("UserFirms");
                });
#pragma warning restore 612, 618
        }
    }
}
